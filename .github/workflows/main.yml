name: Main workflow

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      LOCAL_VERSION_NUMBER_FILE: build_version.txt
    strategy:
      matrix:
        python-version: [2.x, 3.x]
    steps:
    - name: Check out the project
      uses: actions/checkout@v2.3.3
    - name: Set up Python
      uses: actions/setup-python@v2.1.3
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Determine project version
      id: version
      uses: anttikivi/maintain-revision@v0.7.1
      with:
        type: txt
        file: couplet_composer/version
    - name: Cache dependencies
      uses: actions/cache@v2.1.1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install --user --upgrade setuptools wheel
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --builtins=FileNotFoundError --show-source --statistics --exclude=./couplet_composer/llvm/run-clang-tidy.py
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=./couplet_composer/llvm/run-clang-tidy.py
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
    - name: Create distribution archives
      run: python setup.py sdist bdist_wheel
    - name: Upload build artefacts
      uses: actions/upload-artifact@v2.2.0
      with:
        name: couplet-composer-${{ steps.version.outputs.version }}
        path: dist/**/*.tar.gz
      if: matrix.python-version == '3.x'
